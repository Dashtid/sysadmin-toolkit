[project]
name = "sysadmin-toolkit"
version = "2.0.0"
description = "Professional system administration automation toolkit for Windows and Linux"
authors = [
    {name = "David Dashti", email = "david.at.dashti@outlook.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["sysadmin", "automation", "devops", "monitoring", "system-administration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
    "Typing :: Typed",
]

dependencies = [
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "prometheus-client>=0.19.0",
]


[project.urls]
Homepage = "https://github.com/Dashtid/sysadmin-toolkit"
Repository = "https://github.com/Dashtid/sysadmin-toolkit"
Issues = "https://github.com/Dashtid/sysadmin-toolkit/issues"
Documentation = "https://github.com/Dashtid/sysadmin-toolkit/blob/main/README.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
# UV-specific configuration
dev-dependencies = [
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pylint>=3.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "types-requests>=2.31.0",
    "types-pyyaml>=6.0.0",
]

# UV workspace configuration
managed = true
package = true

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.vscode
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
strict_concatenate = true

[[tool.mypy.overrides]]
module = [
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pylint.main]
max-line-length = 100
good-names = ["i", "j", "k", "ex", "Run", "_", "fd", "ip"]
disable = [
    "C0114",  # missing-module-docstring (we use file headers)
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
max-line-length = 100

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests/Python"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["python"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
